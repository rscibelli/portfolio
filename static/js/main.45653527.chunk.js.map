{"version":3,"sources":["components/Home/Home.jsx","services/APICalls.js","components/Feedback/Feedback.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Home","React","useState","drawerOpen","state","setState","toggleDrawer","classes","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","onClick","Typography","variant","Drawer","anchor","open","onClose","List","ListItem","button","ListItemIcon","ListItemText","primary","Divider","baseUrl","feedbackMessage","a","fetch","method","headers","body","JSON","stringify","message","response","json","getAllFeedback","Feedback","feedback","TextField","id","label","multiline","rows","defaultValue","onChange","event","target","value","Button","sendFeedback","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45653527.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport HomeIcon from '@material-ui/icons/Home';\nimport MailIcon from '@material-ui/icons/Mail';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport CodeIcon from '@material-ui/icons/Code';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  }\n}));\n\nexport default function Home() {\n\n  const [state, setState] = React.useState({\n    drawerOpen: false \n  });\n\n  const toggleDrawer = () => {\n    setState({drawerOpen: !state.drawerOpen});\n  }\n\n  const list = () => (\n    <div>\n      <List>\n\n        <ListItem button>\n          <ListItemIcon>\n            <HomeIcon />\n            <ListItemText primary=\"Home\" />\n          </ListItemIcon>\n        </ListItem>\n\n      </List>\n      <Divider />\n      <List>\n\n        <ListItem button>\n          <ListItemIcon>\n            <MailIcon />\n            <ListItemText primary=\"Email Me\" />\n          </ListItemIcon>\n        </ListItem>\n\n        <ListItem button>\n          <ListItemIcon>\n            <ChatIcon />\n            <ListItemText primary=\"Leave Feedback\" />\n          </ListItemIcon>\n        </ListItem>\n\n        <ListItem button onClick=\"https://github.com/rscibelli/portfolio/tree/main\">\n          <ListItemIcon>\n            <CodeIcon />\n            <ListItemText primary=\"Source Code\" />\n          </ListItemIcon>\n        </ListItem>\n\n      </List>\n    </div>\n  );\n\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon onClick={() => toggleDrawer()}/>\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Robert Scibelli's Portfolio\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer anchor={'left'} open={state.drawerOpen} onClose={() => toggleDrawer()}>\n        {list()}\n      </Drawer>\n    </div>\n  );\n}","\nconst baseUrl = \"localhost:8080\"\n\nexport async function sendFeedback(feedbackMessage) {\n    const response = await fetch(baseUrl + `/feedback`, {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({message: feedbackMessage})\n        })\n    return await response.json();\n}\n\nexport async function getAllFeedback() {\n    try{\n        const response = await fetch('/feedback');\n        return await response.json();\n    }catch(error) {\n        return [];\n    }\n}","import * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport { Button } from '@material-ui/core';\nimport { sendFeedback, getAllFeedback } from '../../services/APICalls.js';\n\nexport default function Feedback() {\n\n  const [state, setState] = React.useState({\n    feedbackMessage: 'noMessage',\n    feedback: 'No Feedback Yet!'\n  });\n\n  function handleChange(event) {\n    setState({feedbackMessage: event.target.value});\n  }\n\n function getFeedback() {\n    setState({feedback: getAllFeedback()})\n  }\n\n  return (\n    <div className=\"feedback\">\n      <TextField\n        id=\"outlined-multiline-static\"\n        label=\"Multiline\"\n        multiline\n        rows={4}\n        defaultValue=\"Type feedback here\"\n        onChange={handleChange}\n      />\n      <Button variant=\"outlined\" onClick={() => sendFeedback(state.feedbackMessage)}>Submit</Button>\n      <Button variant=\"outlined\" onClick={() => getFeedback()}>Get All Feedback</Button>\n      <h2>{state.feedback}</h2>\n    </div>\n  );\n}","import './App.css';\nimport Home from './components/Home/Home'\nimport Feedback from './components/Feedback/Feedback'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <body className=\"App-body\">\n        <Home/>\n        <Feedback/>\n      </body>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}