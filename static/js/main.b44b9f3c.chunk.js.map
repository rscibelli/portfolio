{"version":3,"sources":["components/Home/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Home","React","useState","drawerOpen","state","setState","toggleDrawer","classes","className","AppBar","Toolbar","IconButton","edge","color","aria-label","onClick","Typography","variant","Drawer","anchor","open","onClose","List","ListItem","button","ListItemIcon","ListItemText","primary","Divider","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+YAkBMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,MAAO,CACLJ,SAAU,OAIC,SAASK,IAAQ,IAAD,EAEHC,IAAMC,SAAS,CACvCC,YAAY,IAHe,mBAEtBC,EAFsB,KAEfC,EAFe,KAMvBC,EAAe,WACnBD,EAAS,CAACF,YAAaC,EAAMD,cA4CzBI,EAAUhB,IAEhB,OACE,sBAAKiB,UAAWD,EAAQb,KAAxB,UACE,cAACe,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,KAAK,QAAQJ,UAAWD,EAAQX,WAAYiB,MAAM,UAAUC,aAAW,OAAnF,SACE,cAAC,IAAD,CAAUC,QAAS,kBAAMT,SAE3B,cAACU,EAAA,EAAD,CAAYC,QAAQ,KAAKT,UAAWD,EAAQR,MAA5C,8CAKJ,cAACmB,EAAA,EAAD,CAAQC,OAAQ,OAAQC,KAAMhB,EAAMD,WAAYkB,QAAS,kBAAMf,KAA/D,SAtDF,gCACE,cAACgB,EAAA,EAAD,UAEE,cAACC,EAAA,EAAD,CAAUC,QAAM,EAAhB,SACE,eAACC,EAAA,EAAD,WACE,cAAC,IAAD,IACA,cAACC,EAAA,EAAD,CAAcC,QAAQ,gBAK5B,cAACC,EAAA,EAAD,IACA,eAACN,EAAA,EAAD,WAEE,cAACC,EAAA,EAAD,CAAUC,QAAM,EAAhB,SACE,eAACC,EAAA,EAAD,WACE,cAAC,IAAD,IACA,cAACC,EAAA,EAAD,CAAcC,QAAQ,kBAI1B,cAACJ,EAAA,EAAD,CAAUC,QAAM,EAAhB,SACE,eAACC,EAAA,EAAD,WACE,cAAC,IAAD,IACA,cAACC,EAAA,EAAD,CAAcC,QAAQ,wBAI1B,cAACJ,EAAA,EAAD,CAAUC,QAAM,EAACT,QAAQ,mDAAzB,SACE,eAACU,EAAA,EAAD,WACE,cAAC,IAAD,IACA,cAACC,EAAA,EAAD,CAAcC,QAAQ,6BAY9B,kDCvEWE,MAVf,WACE,OACE,qBAAKrB,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAAC,EAAD,SCKOsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b44b9f3c.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport HomeIcon from '@material-ui/icons/Home';\nimport MailIcon from '@material-ui/icons/Mail';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport CodeIcon from '@material-ui/icons/Code';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  }\n}));\n\nexport default function Home() {\n\n  const [state, setState] = React.useState({\n    drawerOpen: false \n  });\n\n  const toggleDrawer = () => {\n    setState({drawerOpen: !state.drawerOpen});\n  }\n\n  const list = () => (\n    <div>\n      <List>\n\n        <ListItem button>\n          <ListItemIcon>\n            <HomeIcon />\n            <ListItemText primary=\"Home\" />\n          </ListItemIcon>\n        </ListItem>\n\n      </List>\n      <Divider />\n      <List>\n\n        <ListItem button>\n          <ListItemIcon>\n            <MailIcon />\n            <ListItemText primary=\"Email Me\" />\n          </ListItemIcon>\n        </ListItem>\n\n        <ListItem button>\n          <ListItemIcon>\n            <ChatIcon />\n            <ListItemText primary=\"Leave Feedback\" />\n          </ListItemIcon>\n        </ListItem>\n\n        <ListItem button onClick=\"https://github.com/rscibelli/portfolio/tree/main\">\n          <ListItemIcon>\n            <CodeIcon />\n            <ListItemText primary=\"Source Code\" />\n          </ListItemIcon>\n        </ListItem>\n\n      </List>\n    </div>\n  );\n\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar>\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon onClick={() => toggleDrawer()}/>\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Robert Scibelli's Portfolio\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer anchor={'left'} open={state.drawerOpen} onClose={() => toggleDrawer()}>\n        {list()}\n      </Drawer>\n\n      Robert Scibelli has lived an honorable life.\n    </div>\n  );\n}","import './App.css';\nimport Home from './components/Home/Home'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Home/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}